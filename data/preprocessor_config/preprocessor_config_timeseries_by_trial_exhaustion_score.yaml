# preprocessor_config.yaml

# List of supported model types
model_types:
  - "Tree Based Classifier"
  - "Logistic Regression"
  - "K-Means"
  - "Linear Regression"
  - "Tree Based Regressor"
  - "Support Vector Machine"
  - "Time Series"        # Added for clarity and for LSTM models

# List of supported model sub-types for each model type
model_sub_types:
  Tree Based Classifier:
    - "Random Forest"
    - "XGBoost"
    - "Decision Tree"
  Logistic Regression:
    - "Logistic Regression"
  K-Means:
    - "K-Means"
  Linear Regression:
    - "Linear Regression"
  Tree Based Regressor:
    - "Random Forest Regressor"
    - "XGBoost Regressor"
    - "Decision Tree Regressor"
  Support Vector Machine:
    - "Support Vector Machine"
  Time Series:
    - "LSTM"             # You can add additional time series model subtypes here

# Updated feature lists for the new dataset.
# Note: The "frame_time" column is not included here because it is automatically
# appended for time series models.
features:
  ordinal_categoricals: []
  nominal_categoricals:
    - player_estimated_hand_length_cm_category
  numericals:
    - joint_power
    - joint_energy
    - energy_acceleration
    - elbow_asymmetry
    - hip_asymmetry
    - ankle_asymmetry
    - wrist_asymmetry
    - knee_asymmetry
    - 1stfinger_asymmetry
    - 5thfinger_asymmetry
    - elbow_power_ratio
    - hip_power_ratio
    - ankle_power_ratio
    - wrist_power_ratio
    - knee_power_ratio
    - 1stfinger_power_ratio
    - 5thfinger_power_ratio
    - L_KNEE_ROM
    - L_KNEE_ROM_deviation
    - L_KNEE_ROM_extreme
    - R_KNEE_ROM
    - R_KNEE_ROM_deviation
    - R_KNEE_ROM_extreme
    - L_SHOULDER_ROM
    - L_SHOULDER_ROM_deviation
    - L_SHOULDER_ROM_extreme
    - R_SHOULDER_ROM
    - R_SHOULDER_ROM_deviation
    - R_SHOULDER_ROM_extreme
    - L_HIP_ROM
    - L_HIP_ROM_deviation
    - L_HIP_ROM_extreme
    - R_HIP_ROM
    - R_HIP_ROM_deviation
    - R_HIP_ROM_extreme
    - L_ANKLE_ROM
    - L_ANKLE_ROM_deviation
    - L_ANKLE_ROM_extreme
    - R_ANKLE_ROM
    - R_ANKLE_ROM_deviation
    - R_ANKLE_ROM_extreme
    - exhaustion_lag1
    - power_avg_5
    - rolling_power_std
    - rolling_hr_mean
    - time_since_start
    - ema_exhaustion
    - rolling_exhaustion
    - rolling_energy_std
    - simulated_HR
    - player_height_in_meters
    - player_weight__in_kg
  y_variable:
    - by_trial_exhaustion_score




paths:
  # Base directories
  data_dir: "../../data/processed"
  raw_data: "final_inner_join_emg_biomech_data.parquet"
  processed_data_dir: "preprocessor/processed"
  features_metadata_file: "features_info/features_metadata.pkl"
  predictions_output_dir: "preprocessor/predictions"
  config_file: "../../dataset/test/preprocessor_config/preprocessor_config.yaml"
  
  # Output directories
  log_dir: "../preprocessor/logs"
  model_save_base_dir: "../preprocessor/models"
  transformers_save_base_dir: "../preprocessor/transformers"
  plots_output_dir: "../preprocessor/plots"
  training_output_dir: "../preprocessor/training_output"

models:
  Tree Based Classifier: # Logistic Regression, K-Means, Linear Regression, Tree Based Regressor, Support Vector Machine
    split_dataset:
      test_size: 0.2
      random_state: 42
      stratify_for_classification: true
    handle_missing_values:
      numerical_strategy:
        strategy: median
        imputer: SimpleImputer
      categorical_strategy:
        strategy: most_frequent
        imputer: SimpleImputer
        fill_value: "Missing"
    test_normality:
      p_value_threshold: 0.05
      skewness_threshold: 1.0
      use_p_value_other_models: false
    handle_outliers:
      zscore_threshold: 3
      iqr_multiplier: 1.5
      apply_zscore: false
      apply_iqr: true
      apply_winsor: false
      winsor_limits: [0.05, 0.05]
      apply_isolation_forest: false
      contamination: 0.05
    choose_transformations:
      method: power
      power_method: yeo-johnson
      skewness_threshold: 1.0
    encode_categoricals:
      ordinal_encoding: OrdinalEncoder
      nominal_encoding: OneHotEncoder
      handle_unknown: ignore
    apply_scaling:
      method: StandardScaler
    implement_smote:
      variant: SMOTENC
      params:
        k_neighbors: 5
        sampling_strategy: 'auto'
    inverse_transformations:
      inverse_scaling: true
      inverse_transformation: true
      inverse_encoding: true
    debug_split_dataset: true
    debug_handle_missing_values: true
    debug_test_normality: true
    debug_handle_outliers: true
    debug_choose_transformations: true
    debug_encode_categoricals: true
    debug_apply_scaling: true
    debug_implement_smote: true
    debug_final_inverse_transformations: true
    debug_validate_inverse_transformations: true
    debug_generate_recommendations: true

# --- New time series section for LSTM models ---
time_series:
  time_series_model_type: "classifier" # or regressor
  enabled: true
  time_column: "biomech_datetime"         # This must match the column name in the updated dataset.
  horizon: 24                        # Number of future time steps to predict. For DTW/Pad can be overriden below to match sequence lengths for max horizon
  step_size: 1                      # Stride for the sliding window.
  ts_outlier_handling_method: "none" # "median", "mean", or "none"
  ts_sequence_mode: "dtw" # "set_window", "pad", "dtw", "variable_length"
  sequence_modes:
    set_window:
      window_size: 30              # Fixed window size for all sequences
      max_sequence_length: 30      # Maximum allowed sequence length
      
    pad:
      padding_side: "post"        # Pad at end of sequences
      pad_threshold: 0.2          # Pad threshold for sequences
      match_horizon_and_seq_length: true #For DTW/Pad this should be around the same length as the categorical

    dtw:
      use_dtw: true              # Enable DTW alignment
      reference_sequence: "max"  # Use mean sequence as reference
      dtw_threshold: 0.2          # DTW threshold for sequences
      match_horizon_and_seq_length: true # For DTW/Pad this should be around the same length as the categorical
      
    variable_length:

  # SMOTE-TS configuration
  apply_smote_ts: true  # Master toggle for SMOTE-TS
  smote_ts_config:
    k_neighbors: 5      # Number of neighbors for interpolation
    random_state: 42    # For reproducibility
    min_imbalance_ratio: 0.8  # Only apply when imbalance is worse than this
    preserve_phases: true  # Whether to preserve phase boundaries
  # --- New options for PSI-based processing ---
  psi_feature_selection:
    enabled: true              # Enable PSI-based feature selection
    threshold: 0.25            # PSI threshold for dropping features
    split_frac: 0.75           # Use 75% of the data as the reference (earlier) period
    split_distinct: false      # Whether to split based on unique time values (false means row count)
    cut_off: null              # Optionally provide a specific cutoff date (in proper format)
    apply_before_split: true   # Apply PSI selection before the train/test split

  feature_engine_split:
    enabled: true              # Enable the alternative splitting using feature-engine
    split_frac: 0.75           # Use 75% of data as the reference (train) set
    split_distinct: false      # Whether to split based on unique time values
    cut_off: null              # Optionally specify a cutoff date for splitting
