# ML Definition and Final ML dataset merge before Preprocessing pipeline


def get_ml_dataset_column_definitions():
    """
    Define column descriptions for the ML dataset, including unique key features for predictive modeling.

    Returns:
        column_definitions (dict): Dictionary where keys are column names and values are descriptions.
    """
    column_definitions = {
        # Outcome and trial metadata
        'result': "Binary indicator of shot outcome: 1 if made, 0 if missed.",
        'trial_id': "Unique identifier for each trial, formatted as 'Txxxx'.",
        'shot_id': "Sequential shot ID for organizing shots within a trial.",
        # Add new columns
        'initial_ball_release_angle': "The initially recorded ball release angle based on motion capture.",
        'calculated_ball_release_angle': "Ball release angle computed with adjusted trajectory factors.",
        'distance_to_basket': "Euclidean distance from the ball's release point to the basket plane.",
        'optimal_ball_release_angle': "Theoretical optimal release angle based on shot trajectory models.",
        'angle_difference': "Difference between the calculated and optimal ball release angle",
    
        # Landing and entry metrics
        'landing_x': "X coordinate of ball landing position on the hoop plane, measured in inches with the hoop front as origin.",
        'landing_y': "Y coordinate of ball landing position on the hoop plane, measured in inches with the hoop front as origin.",
        'entry_angle': "Angle at which the ball enters the hoop plane, measured in degrees to indicate entry precision.",

        # Joint power metrics (minimum, maximum, average, standard deviation)
        'L_ANKLE_min_power': "Minimum power generated by the left ankle during the motion.",
        'L_ANKLE_max_power': "Maximum power generated by the left ankle during the motion.",
        'L_ANKLE_avg_power': "Average power generated by the left ankle during the motion.",
        'L_ANKLE_std_power': "Standard deviation of the power generated by the left ankle during the motion.",
        'R_ANKLE_min_power': "Minimum power generated by the right ankle during the motion.",
        'R_ANKLE_max_power': "Maximum power generated by the right ankle during the motion.",
        'R_ANKLE_avg_power': "Average power generated by the right ankle during the motion.",
        'R_ANKLE_std_power': "Standard deviation of the power generated by the right ankle during the motion.",
        # Repeat similar definitions for L_KNEE, R_KNEE, L_HIP, R_HIP, L_ELBOW, R_ELBOW, L_WRIST, R_WRIST, L_1STFINGER, L_5THFINGER, R_1STFINGER, R_5THFINGER

        # Joint angles and release angles
        'elbow_max_angle': "Maximum angle achieved by the elbow during the motion.",
        'elbow_release_angle': "Angle of the elbow at the point of ball release.",
        'wrist_max_angle': "Maximum angle achieved by the wrist during the motion.",
        'wrist_release_angle': "Angle of the wrist at the point of ball release.",
        'knee_max_angle': "Maximum angle achieved by the knee during the motion.",
        'knee_release_angle': "Angle of the knee at the point of ball release.",

        # Release ball dynamics; defined by Meters Per Second
        'release_ball_speed': "Speed (m/s) of the ball at the point of release, derived from velocity components.",
        'release_ball_velocity_x': "Velocity of the ball along the x-axis at the point of release.",
        'release_ball_velocity_y': "Velocity of the ball along the y-axis at the point of release.",
        'release_ball_velocity_z': "Velocity of the ball along the z-axis at the point of release.",
        'release_ball_direction_x': "Normalized direction of the ball's velocity along the x-axis at the point of release.",
        'release_ball_direction_y': "Normalized direction of the ball's velocity along the y-axis at the point of release.",
        'release_ball_direction_z': "Normalized direction of the ball's velocity along the z-axis at the point of release.",
        'release_ball_x': "X coordinate of the ball's position at the release point.",
        'release_ball_y': "Y coordinate of the ball's position at the release point.",
        'release_ball_z': "Z coordinate of the ball's position (height) at the release point.",
        'release_frame_time': "Frame timestamp at the ball release point, relative to trial start.",
        'release_angle': "Angle of the ball's trajectory at the point of release.",
        'time_to_peak': "Time taken from ball release to the point where the ball reaches its peak height.",
        'peak_height_relative': "Difference between the release height and the peak ball height, representing the shot arc.",

        # Player characteristics
        'player_participant_id': "Unique identifier for the player, used for grouping and analysis.",
        'player_height_in_meters': "Player's height in meters, derived from participant data.",
        'player_weight__in_kg': "Player's weight in kilograms, derived from participant data.",
        'player_dominant_hand': "Player's dominant hand (e.g., 'Left' or 'Right'), based on shooting preference.",
        'player_estimated_wingspan_cm': "Estimated wingspan of the player in centimeters, derived from biometric data.",
        'player_estimated_standing_reach_cm': "Estimated standing reach of the player in centimeters, based on height and arm length.",
        'player_estimated_hand_length_cm': "Estimated hand length of the player in centimeters, derived from biometric data.",
    
        # Joint energy metrics
        'joint_energy': "Energy expended by a specific joint in a single frame, calculated as power multiplied by time delta.",
        'joint_energy_by_trial': "Cumulative energy expended by a specific joint within a trial.",
        'joint_energy_by_trial_exhaustion_score': "Normalized exhaustion score for a specific joint within a trial, scaled to the maximum trial energy.",
        'joint_energy_overall_cumulative': "Cumulative energy expended by a specific joint across all trials.",
        'joint_energy_overall_exhaustion_score': "Normalized exhaustion score for a specific joint across all trials, scaled to the maximum overall energy.",

        # Summarized Energy metrics
        'mean_energy': "Mean energy expended per trial, averaged across all frames.",
        'max_energy': "Maximum energy expended in a single frame during a trial.",
        'mean_exhaustion': "Mean exhaustion score for a trial, averaged across all frames.",
        'max_exhaustion': "Maximum exhaustion score for a trial, representing peak effort.",


    }

    return column_definitions



if __name__ == "__main__":

    # Output column definitions
    print("[Step: Final ML Dataset Column Definitions]")
    column_definitions = get_ml_dataset_column_definitions()
    for col, desc in column_definitions.items():
        print(f"{col}: {desc}")

